1.what is linking function? what are the type of linking function?
2.explain data binding ?
automatic synchronization of data between model amd view.
3.what is controller in angularjs?
controller is nothing but javascript function which provides data and logic to html ui.
it controllers data flow between server and html ui
4.what is difference between link and compile?
angular directive
extend html
reusable component
The compile() and link() functions define how the directive is to modify the HTML that matched the directive.
The compile() function is called once for each occurrence of the directive in the HTML page. 
The compile() function can then do any one-time configuration needed of the element containing the directive.

The compile() function finishes by returning the link() function. 
The link() function is called every time the element is to be bound to data in the $scope object.
The compile() function takes two parameters: The element and attributes parameters.
The link() function takes three parameters: The $scope parameter, the element parameter and the attributes parameter.
Directives have access to the parent scope by default in AngularJS applications
Directives that use isolate scope provide 3 different options to interact with the
outside world (the world on the other side of the wall).
The 3 options are referred to as Local Scope Properties and
can be defined using the @, =, and & characters mentioned earlier. Hereâ€™s how they work.
https://weblogs.asp.net/dwahlin/creating-custom-angularjs-directives-part-2-isolate-scope
5.what is difference between $apply() and $digest()?
digest cycle only update child scope and current scope.apply() update every scope.
6.angular.copy()
7.difference between service and factory?
https://tmconnect.webex.com/tmconnect/j.php?MTID=mb4fd76123c86fdc0f2f283f68e690c88

================================
sanitization used to convert untrusted value into trusted value that is safe to insert in DOM.
Angular santize untrusted value of HTML, style and url.
<p class="e2e-inner-html-interpolated">{{htmlSnippet}}</p>
it's advisable not to use innerHTML, always use {{}} because interpolated content is always escaped.
Avoid direct use of the DOM APIs:
================================
avoid direct intercation to DOM instead of use Angular Template

Content security policy
==============================

Use the offline template compiler

Server-side XSS protection
=======================

Trusting safe values 
-------------------------
inject DomSanitizer and call one of the following methods:
bypassSecurityTrustHtml
bypassSecurityTrustScript
bypassSecurityTrustStyle
bypassSecurityTrustUrl
bypassSecurityTrustResourceUrl

HTTP-level vulnerabilities
================================
Angular has two buildin support to prevent two http vulnerablities cross-site request forgery and cross-site script inclusion.

Cross-site request forgery 
====================================
In a cross-site request forgery (CSRF or XSRF), an attacker tricks the user into visiting a different web page (such as evil.com) 
with malignant code that secretly sends a malicious request to the application's web server (such as example-bank.com).

To prevent this, the application must ensure that a user request originates from the real application, not from a different site. 
The server and client must cooperate to thwart this attack.
In a common anti-XSRF technique, the application server sends a randomly generated authentication token in a cookie. 
The client code reads the cookie and adds a custom request header with the token in all subsequent requests.
The server compares the received 
cookie value to the request header value and rejects the request if the values are missing or don't match.

Cross-site script inclusion (XSSI) 
=======================================
Cross-site script inclusion, also known as JSON vulnerability.
can allow an attacker's website to read data from a JSON API. The attack works on older browsers by overriding native JavaScript object constructors, 
and then including an API URL using a <script> tag.
 Servers can prevent an attack by prefixing all JSON responses to make them non-executable, 
 by convention, using the well-known string ")]}',\n".
 
 Angular's HttpClient library recognizes this convention and automatically strips the string ")]}',\n" from 
 all responses before further parsing

